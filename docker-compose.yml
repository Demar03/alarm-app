version: '3.8'

services:
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - OPENAI_API_KEY=${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}
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:4000/healthz').then(r=>r.ok?process.exit(0):process.exit(1)).catch(()=>process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - alarm-network

  client:
    build:
      context: ./apps/client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - alarm-network

networks:
  alarm-network:
    driver: bridge
